version: '3.8'

services:

  traefik:
    image: ghcr.io/silkkycloud/traefik:2.5.6
    command: --configFile=/etc/traefik/traefik.yml
    cap_add:
      # Image runs rootless, This allows Docker to bind the privileged ports.
      - NET_BIND_SERVICE
    hostname: traefik
    networks:
      - socat_net
      - metrics_net
      - public
    ports:
      # X-Forwarded-For / X-Real-IP headers are only available in host mode.
      - target: 80
        published: 80
        mode: host
      - target: 443
        published: 443
        mode: host
    deploy:
      mode: global
      placement:
        constraints:
          - "node.labels.reverse_proxy == true"
      update_config:
        parallelism: 1
        failure_action: rollback
      labels:
        # Prometheus
        - "prometheus-job=traefik"
        - "prometheus-port=8082"
        - "prometheus-path=/metrics"
        # Traefik
        - "traefik.enable=true"
        # Router
        - "traefik.http.routers.traefik-dashboard.rule=Host(`traefik.silkky.cloud`)"
        - "traefik.http.routers.traefik-dashboard.entrypoints=websecure"
        - "traefik.http.routers.traefik-dashboard.tls=true"
        - "traefik.http.routers.traefik-dashboard.middlewares=authelia@docker"
        - "traefik.http.routers.traefik-dashboard.service=api@internal"
        # Dummy service for Swarm port detection. The port can be any valid integer value.
        - "traefik.http.services.dummy-svc.loadbalancer.server.port=9999"
    configs:
      - source: traefik-static
        target: /etc/traefik/traefik.yml
        uid: "1000"
        gid: "1000"
      - source: traefik-dynamic
        target: /etc/traefik/dynamic.yml
        uid: "1000"
        gid: "1000"
    secrets:
      # Origin certificates
      - source: cloudflare-origin-crt
        target: origin.crt
        uid: "1000"
        gid: "1000"
      - source: piped-zerossl-bundle
        target: piped.crt
        uid: "1000"
        gid: "1000"
      # Origin keys
      - source: cloudflare-origin-key
        target: origin.key
        uid: "1000"
        gid: "1000"
        mode: 0600
      - source: piped-zerossl-key
        target: piped.key
        uid: "1000"
        gid: "1000"
        mode: 0600

  dockersocat:
    image: ghcr.io/tecnativa/docker-socket-proxy:0.1
    networks:
      - socat_net
    logging:
      driver: none
    deploy:
      mode: global
      placement:
        constraints:
          - "node.role == manager"
      resources:
        limits:
          memory: 25M
          cpus: '0.1'
        reservations:
          memory: 5M
          cpus: '0.05'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - NETWORKS=1
      - SERVICES=1
      - TASKS=1

networks:
  # Create:
  # docker network create \
  #   --driver overlay \
  #   --subnet 20.0.0.0/16 \
  #   --opt com.docker.network.driver.mtu=1450 \
  #   --opt encrypted=true \
  #   public
  public:
    external: true
  metrics_net:
    external: true
  socat_net:
    driver: overlay
    internal: true
    driver_opts:
      encrypted: "true"
      com.docker.network.driver.mtu: 1450

configs:
  traefik-static:
    file: ./traefik/traefik.yml
  traefik-dynamic:
    file: ./traefik/dynamic.yml

secrets:
  # Certificates
  cloudflare-origin-crt:
    external: true
  piped-zerossl-bundle:
    external: true
  # Private Keys
  cloudflare-origin-key:
    external: true
  piped-zerossl-key:
    external: true
